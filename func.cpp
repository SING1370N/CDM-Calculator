/////////////////////////////////////////////////////////////////////////
/////////////////////операцiї для роботи з множинами/////////////////////
/////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////
//пiдключаємо заголовнi файли проекту та бiблiотеки
#include "mainwindow.h"
#include <iostream>
#include <time.h>
#include <stdio.h>
#include <QSound>


//функцiя об'єднання
void ob(QStringList A,QStringList B,QStringList &C)
{
    int i=0, j=0;                              //встановлюємо лiчильники для перегляду елементiв
    while(i<A.size() && j<B.size())            //цикл для перегляду елементiв
    {
        if(A[i]<B[j])                          //якщо елемент першого масиву менший за другий, то
            C<<A[i++];                         //переписуємо його в масив С та збiльшуємо лiчильник елементiв на 1
        else
            if(A[i]>B[j])                      //якщо елемент другого масиву менший за перший, то
                C<<B[j++];                     //переписуємо його в масив С та збiльшуємо лiчильник елементiв на 1
            else {                             //якщо елементи однаковi, то
                C<<B[j++];                     //записуємо його в масив С та збiльшуємо обидва лiчильника на 1
                i++;}
    }
    for(i=i;i<A.size();i++)                    //цикл для переписування непереглянутих елементiв першого масиву
        C<<A[i];
    for(j=j;j<B.size();j++)                    //цикл для переписування непереглянутих елементiв другого масиву
        C<<B[j];
}


//функцiя перетину
void perer(QStringList A,QStringList B,QStringList &C)
{
    for(int i=0;i<A.size();i++)                 //цикл для перегляду елементiв першого масиву
        for(int j=0;j<B.size();j++)             //цикл для перегляду елементiв другого масиву
        {
            if(A[i]==B[j])                          //якщо елементи однаковi, то
                C<<A[i];                            //копiюємо в масив С
        }
}


//функцiя рiзницi множин
void razAB(QStringList A,QStringList B,QStringList &C)
{
    for(int i=0;i<A.size();i++)                 //цикл для перезапису елементiв з А в С
        C<<A[i];
    for(int i=0;i<C.size();i++)                 //цикл перегляду елементiв С
        for(int j=0;j<B.size();j++)             //цикл перегляду елементiв В
            if(C[i]==B[j])                      //якщо елементи С збiгаються з елементами В, то
                C.removeAt(i);                  //видаляємо цей елемент з С
}


//функцiя перевiрки на входження
bool vhod(QStringList A,QStringList B)
{
    int n=0;                                    //створюємо змiнну, в якiй будем зберiгати кiлькiсть однакових елементiв в А i В
    for(int i=0;i<A.size();i++)                 //цикл перегляду елементiв А
        for(int j=0;j<B.size();j++)             //цикл перегляду елементiв В
        {
            if(A[i]==B[j]){                         //якщо елементи А збiгаються з елементами В, то
                n++;                                //збiльшуємо кiлькiсть елементiв в змiннiй
                break;}
        }
    return n==A.size();                         //повертаємо true якщо усi елементи однiєї множини спiвпадають з елементами iншої
}


//генератор випадкових символiв
void ran(QString &z)
{

    int O_rand = 1 + rand() % 3, rand_f;        //генеруємо число - кiлькiсть елементiв
    bool Rand;
    for (int O_for=0; O_for<=O_rand; O_for++)   //цикл для генерування елементiв кiлькiстью O_rand
    {
        Rand = bool (rand() % 2);               //генеруємо число (0 або 1) яке вiдповiдає за тип сивола
        rand_f = 1 + rand() % 2;                //генеруємо число, яке вiдповiдає кiлькостi символiв в елементi
        if(Rand)                                //якщо 1, то символи будуть числами
        {
            for(int i=0;i<rand_f;i++)           //генеруємо rand_f чисел i записуємо в змiнну z
                z += QChar(rand()% 10 + 48);
        }
        else                                    //якщо 0, то символи будуть лiтерами
        {
            for(int i=0;i<rand_f;i++)           //генеруємо rand_f лiтер i записуємо в змiнну z
                z += QChar(rand()% 26 + 65);
        }
        if(O_for!=O_rand)                       //якщо елемент не останнiй вiддiляємо його символом-пробiлом
            z += " ";
    }
    QSound plays (":/resource/res/sound/random.wav");
    plays.play(":/resource/res/sound/random.wav");
}
